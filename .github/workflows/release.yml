name: Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: 386
          # Windows
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: 386
          # macOS
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          # FreeBSD
          - goos: freebsd
            goarch: amd64
          - goos: freebsd
            goarch: arm64
          # OpenBSD
          - goos: openbsd
            goarch: amd64
          - goos: openbsd
            goarch: arm64
          # NetBSD
          - goos: netbsd
            goarch: amd64
          - goos: netbsd
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build binary
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: |
        BINARY_NAME="HttpIOCScan"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        
        ASSET_NAME="HttpIOCScan-${{ matrix.goos }}-${{ matrix.goarch }}"
        if [ -n "${{ matrix.goarm }}" ]; then
          ASSET_NAME="${ASSET_NAME}v${{ matrix.goarm }}"
        fi
        if [ "${{ matrix.goos }}" = "windows" ]; then
          ASSET_NAME="${ASSET_NAME}.exe"
        fi
        
        go build -ldflags="-s -w" -o ${ASSET_NAME} ./cmd/HttpIOCScan

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./HttpIOCScan-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        asset_name: HttpIOCScan-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        asset_content_type: application/octet-stream
